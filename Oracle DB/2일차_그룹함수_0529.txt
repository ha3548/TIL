TO_CHAR
TO_NUMBER
TO_DATE

SELECT TO_NUMBER(TO_CHAR(123456))
FROM DUAL;

SELECT TO_CHAR(123456789,'999999.999') + 1 AS RESULT
FROM DUAL;

SELECT TO_CHAR(123456789) + 1 AS RESULT
FROM DUAL;

SELECT TO_CHAR(123456789,'$999999999') 
FROM DUAL;

SELECT TO_CHAR(123456789,'999,999,999') 
FROM DUAL;

SELECT TO_CHAR(123456789,'L999,999,999') 
FROM DUAL;

SELECT TO_DATE('05292019','MM-DD-YYYY')
FROM DUAL;

SELECT TO_DATE('20190529','YYYY-MM-DD')
FROM DUAL;

SELECT TO_CHAR(SYSDATE)
FROM DUAL;

NVL
NVL2

SELECT ENAME, MGR
FROM EMP
WHERE MGR IS NOT NULL;

SELECT ENAME, NVL(MGR, 1111) + 1
FROM EMP;

SELECT ENAME, NVL(COMM, 100)
FROM EMP ;

1. 모든 사원들에게 커미션을 200씩 추가하여 출력하시오.
SELECT ENAME, NVL(COMM,0) + 200
FROM EMP;

2. JOB이 MANAGER가 아닌 사원의 모든 정보를 
출력하시오. (!=, <>, ^=)
SELECT * 
FROM EMP
WHERE JOB <> 'MANAGER';

3. 급여가 800 이상인 사원의 이름, 급여, 부서번호를 
출력하시오.
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL >= 800;

4. 직책이 SALESMAN, ANALYST 인 사람의 모든 정보를 
    출력하시오.
SELECT *
FROM EMP
WHERE JOB = 'SALESMAN'
OR JOB = 'ANALYST';

SELECT *
FROM EMP
WHERE JOB LIKE 'S%'
OR JOB = 'A%';

IN, SOME, ANY

SELECT *
FROM EMP
WHERE JOB IN ( 'SALESMAN', 'ANALYST');
WHERE JOB = ANY ( 'SALESMAN', 'ANALYST');
WHERE JOB = SOME ( 'SALESMAN', 'ANALYST');

5. 부서번호가 30번인 사원들 중 사원번호, 이름, 입사일을 
출력하는데 사원번호를 오름차순으로 정렬하시오.
SELECT EMPNO, ENAME, HIREDATE
FROM EMP
WHERE DEPTNO = 30
ORDER BY EMPNO;

6. 사원들 중에 1981년에 입사한 사원의 이름과 사원번호를 
사원번호가 내림차순으로 정렬하시오.

SELECT ENAME, EMPNO, HIREDATE 
FROM EMP
WHERE TO_CHAR(HIREDATE, 'YYYY') = '1981'
ORDER BY EMPNO DESC;

7. 사장님만 급여를 2배 인상하시오.
SELECT EMPNO, ENAME, SAL, 
DECODE (MGR, NULL, SAL*2, SAL)
FROM EMP;

8. 학생들 중에 기계과 학생들은 등록금 10000원
전기전자학생들은 8000원, 컴퓨터 정보학생들은 6000원이라고 
합니다.
학번, 이름, 전공, 등록금을 출력하시오. 단, 2013년 학번만
출력하시오.
SELECT  STU_NO, STU_NAME, STU_DEPT,
DECODE (STU_DEPT, '기계', 10000,
		'전기전자', 8000,
		'컴퓨터정보', 6000,
		0 ) AS 등록금
FROM STUDENT
WHERE STU_NO LIKE '2013%';

SELECT STU_NO, STU_NAME, STU_DEPT,
	CASE STU_DEPT WHEN '기계' THEN 10000
		         WHEN '전기전자' THEN 8000
                  	         WHEN '컴퓨터정보' THEN 6000
		         ELSE 0
	END
FROM STUDENT
WHERE STU_NO LIKE '2013%';

9. 기계과 학생들의 가장 큰 신장, 가장 작은 신장, 
평균 신장을 출력하시오.
SELECT MAX(STU_HEIGHT), MIN(STU_HEIGHT), AVG(STU_HEIGHT)
FROM STUDENT
WHERE STU_DEPT = '기계';

SELECT MAX(STU_HEIGHT), MIN(STU_HEIGHT), ROUND(AVG(STU_HEIGHT),2)
FROM STUDENT
WHERE STU_DEPT = '기계';

SELECT MAX(STU_HEIGHT), MIN(STU_HEIGHT), TO_CHAR(AVG(STU_HEIGHT),'999.99')
FROM STUDENT
WHERE STU_DEPT = '기계';

10. 1981년 입사자들의 평균 임금을 출력하시오.

SELECT AVG(SAL) AS 평균
FROM EMP
WHERE TO_CHAR(HIREDATE,'YYYY')=1981;

11. 사원번호, 사원이름, 총 급여 (SAL + COMM)을 출력하시오.
select empno as 사원번호, ename as 사원이름, sal + decode(comm, null, 0, comm) as 총급여
from emp;

SELECT EMPNO,ENAME,SAL,NVL(COMM,0)+SAL AS 총급여
FROM EMP;

12. 사원번호, 사원이름, 직책(사원, 사장)을 표시하시오.
select empno as 사원번호, ename as 사원이름, 
case job when 'PRESIDENT' then '사장'
            else '사원'
end as 직책
from emp;

select empno as 사원번호, ename as 사원이름, 
         decode(mgr, null, '사장', '사원') as 직책
from emp;

13. SALESMAN 의 커미션 평균을 출력하시오.
SELECT JOB, AVG(NVL(COMM,0))
FROM EMP 
WHERE JOB = 'SALESMAN'
GROUP BY JOB;

14. 부서명, 부서별 사원들의 인원수를 출력하시오.
SELECT JOB, COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(*) >=4;

15. JOB 중에 가장 적게 수입(SAL+COMM)을 가지는 직무의 
평균 월급(SAL)을 출력하시오.

SELECT JOB, AVG(SAL)
FROM EMP
GROUP BY JOB
HAVING MIN(SAL+NVL(COMM,0)) = 
(SELECT MIN(SAL+NVL(COMM,0)) FROM EMP);

16. 사원수가 5명이상인 부서의 부서번호와 
사원수를 출력하시오.
SELECT DEPTNO, COUNT(*) AS 사원수
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*) >=5;











