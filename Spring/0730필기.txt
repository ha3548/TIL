자바컴포넌트 = 자바빈
<조건4가지>
1) public class
2) public 매개변수없는 생성자 필요
3) 프로퍼티용 member field는 public이면 안됨
    private String id;
    private boolean power;
4) 프로퍼티용 public setter/getter매서드 필요
    public void setId(String id){this.id=id;}
    public void setPower(boolean p){this.power=p;}
    public String getId(){return id;}
    public boolean isPower(){return power;}

---------------------------------------------------------------------
<EL 표기법> ${   }
Ex) 
[Expression] 고객의 아이디: <%=((Customer)request.getAttribute("c")).getId() %>
[Expression Language] 고객의 아이디: ${requestScope.c.id}<br>

[Expression] 고객의 건물관리번호: <%=((Customer)request.getAttribute("c")).getPost().getBuildingno() %>
[Expression Language] 고객의 건물관리번호: ${requestScope.c.post.buildingno}

*어트리뷰트들(속성값)만 ~Scope이 붙는다
*Context? 비슷한것들끼리 모여있다 = 정보를 담고있는 API

JAVA EE
  javax.servlet.ServletContext: 웹어플리케이션에 대한 정보
  <%=application.getRealPath("a.jpg")%>

  javax.servlet.jsp.PageContext: JSP에 대한 정보
  <%
     sop(pageContext.getOut());
     sop(pageContext.getRequest());
     sop(pageContext.getResponse());
  %>

JAVA SE
  java.lang.Class: 클래스정보
  java.lang.Object: 객체정보
  java.io.File: 파일정보

*변수로 담을수 없다!
String ~ = ${  } -> X
∴ 변수. 조건문, 반복문 처리를 위해서는 EL기반의 태그라이브러리를 사용해야함
   -> JspStandardTagLibrary(JSTL)

JSTL.jsp
1) If ~ Else 구문
<c:if> 태그는 있지만 <c:else> 태그는 없음
<c:choose>
	<c:when test="${param.foo == 'hello'}">환영합니다.</c:when>
	<c:when test="${param.foo == 'bye'}">안녕히가세요.</c:when>
	<c:otherwise ···>
</c:choose>

2) 반복문
<c:forEach var="i" begin="0" end="10" step="2">
${ i }
</c:forEach>

----------------------------------------------------------------------------------------------
※ Default Object : .java파일의 _jspService( ) 내장객체
				     * EL 문법
<%=request.getParameter("foo")%>	->  ${param.foo}
<%=request.getAttribute("status")%>	->  ${requestScope.status}
<%=request.getContextPath()%>
<%out.print(1+2);%>

<%=application.getRealPath("a.png")%>

<% HttpServletRequest req;
     req = pageContext.getRequest(); %>

※ pageContext.jsp <-> pageContext1.jsp
pageContext 객체가 서로 다르지만, (Request객체도 엄밀히 말하면 서로 다름)
포인터로 같은 메모리를 참조한다. 따라서 내용은 같다!

---------------------------------------------------------------------------------------

${applicationScope.aaa}
${requestScope.r2}
${pageScope.p1}

<%pageContext.setAttribute("num",1);%>
${pageScope.num}

${num}의 의미?
-> jsp용 .java에서
   pageContext.getAttribute("num", PageContext.PAGE_SCOPE); 없으면
   pageContext.getAttribute("num", PageContext.REQUEST_SCOPE); 없으면
   pageContext.getAttribute("num", PageContext.SESSION_SCOPE); 없으면
   pageContext.getAttribute("num", PageContext.APPLICATION_SCOPE); = servletContext
   그래도 없으면 null 출력
   ※ lifeCycle이 짧은-긴 순서

<c:set var="num" value="1" scope="request"/>
= pageContext.setAttribute("num", "1", PageContext.REQUEST_SCOPE);
<c:set var="num" value="1" scope="session"/>
= SESSION_SCOPE
<c:set var="num" value="1" scope="application"/>
= APPLICATION_SCOPE












